###############################################################################
#  Copyright (c) 2014-2015 libbitcoin-server developers (see COPYING).
#
#         GENERATED SOURCE CODE, DO NOT EDIT EXCEPT EXPERIMENTALLY
#
###############################################################################
sudo:
    - false

language:
    - cpp

addons:
    apt:
        sources:
            - boost-latest
            - ubuntu-toolchain-r-test
        packages:
            - g++-4.8

matrix:
    include:
        - os: linux
          compiler: clang
          env: LINK=dynamic
          apt:
            sources:
                - sourceline: 'ppa:h-rayflood/llvm'
            packages:
                - clang-3.4
        - os: linux
          compiler: clang
          env: LINK=static
          apt:
            sources:
                - sourceline: 'ppa:h-rayflood/llvm'
            packages:
                - clang-3.4
        - os: linux
          compiler: gcc
          env: LINK=dynamic
          apt:
            packages:
                - bash-completion
        - os: linux
          compiler: gcc
          env: LINK=static
          apt:
            packages:
                - lcov
                - bash-completion
        - os: osx
          compiler: clang
          env: LINK=dynamic
        - os: osx
          compiler: clang
          env: LINK=static
    fast_finish:
        - true

before_install:

    # Set aliases for readability.
    - if [[ $CC             == gcc     ]]; then
        GCC=true;
        export CC=gcc-4.8;
        export CXX=g++-4.8;
      fi
    - if [[ $CC             == clang   ]]; then CLANG=true; fi
    - if [[ $LINK           == static  ]]; then STATIC=true; fi
    - if [[ $LINK           == dynamic ]]; then DYNAMIC=true; fi
    - if [[ $TRAVIS_OS_NAME == osx     ]]; then OSX=true; fi
    - if [[ $TRAVIS_OS_NAME == linux   ]]; then LINUX=true; fi

install:

    # Download and install packages for osx/clang/dynamic.
    - if [[ $OSX   && $CLANG && $DYNAMIC ]]; then brew unlink boost; brew install boost; fi
    # Download and install packages for osx/clang/dynamic.
    - if [[ $OSX   && $CLANG && $DYNAMIC ]]; then brew unlink bash-completion; brew install bash-completion; fi
script:

    # Download and build libbitcoin-server and all dependencies.
    - if [[ $OSX   && $CLANG && $STATIC  ]]; then CC=$CC CXX=$CXX ./install.sh --without-consensus --disable-shared --build-boost --prefix=$TRAVIS_BUILD_DIR/my-prefix; fi
    - if [[ $LINUX && $CLANG && $STATIC  ]]; then CC=$CC CXX=$CXX ./install.sh --disable-shared --build-boost --prefix=$TRAVIS_BUILD_DIR/my-prefix CFLAGS='-Os' CXXFLAGS='-Os'; fi
    - if [[ $LINUX && $GCC   && $STATIC  ]]; then CC=$CC CXX=$CXX ./install.sh --build-boost --disable-shared --build-dir=my-build --prefix=$TRAVIS_BUILD_DIR/my-prefix --with-bash-completiondir CFLAGS='-Og -g --coverage' CXXFLAGS='-Og -g --coverage'; fi
    - if [[ $OSX   && $CLANG && $DYNAMIC ]]; then CC=$CC CXX=$CXX ./install.sh --with-bash-completiondir; fi
    - if [[ $LINUX && $CLANG && $DYNAMIC ]]; then CC=$CC CXX=$CXX ./install.sh --build-boost --disable-ndebug --disable-static --prefix=$TRAVIS_BUILD_DIR/my-prefix CFLAGS='-Os' CXXFLAGS='-Os'; fi
    - if [[ $LINUX && $GCC   && $DYNAMIC ]]; then CC=$CC CXX=$CXX ./install.sh --without-consensus --disable-static --build-boost --with-bash-completiondir --prefix=$TRAVIS_BUILD_DIR/my-prefix CFLAGS='-Os -s' CXXFLAGS='-Os -s'; fi

after_success:

    # Install coveralls and current lcov.
    - if [[ $LINUX && $GCC   && $STATIC  ]]; then gem install coveralls-lcov; fi

    # Capture coverage info, filter out system and test code, and debug before upload.
    - if [[ $LINUX && $GCC   && $STATIC  ]]; then lcov --directory . --capture --output-file coverage.info; fi
    - if [[ $LINUX && $GCC   && $STATIC  ]]; then lcov --remove coverage.info "/usr/*" "$TRAVIS_BUILD_DIR/my-prefix/*" "my-build/*" "test/*" --output-file coverage.info; fi
    - if [[ $LINUX && $GCC   && $STATIC  ]]; then lcov --list coverage.info; fi

    # Upload coverage info to coveralls service (--repo-token <private coveralls repo token>).
    - if [[ $LINUX && $GCC   && $STATIC  ]]; then coveralls-lcov coverage.info; fi

