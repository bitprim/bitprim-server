# Bitprim.Server
#
# Copyright (c) 2016 Bitprim developers (see AUTHORS)
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

language: cpp
# sudo: false
# sudo: required
# dist: trusty
git:
  submodules: false
  
matrix:
  include:

    # Linux clang-3.6 Debug
    - env: CLANG_VERSION=3.6 CXX_FLAGS="-std=c++11" BUILD_TYPE=Debug
      os: linux
      sudo: required
      dist: trusty
      cache:
        ccache: true
        timeout: 1000
        directories:
          - $HOME/boost
          - $HOME/protobuf
          - $HOME/zeromq
      addons: &clang36
        apt:
          packages:
            - clang-3.6
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6


matrix:
    include:
        - os: osx
          compiler: clang
          env: LINK=dynamic
        - os: osx
          compiler: clang
          env: LINK=static
        - os: linux
          compiler: clang
          env: LINK=dynamic
          apt:
            sources:
                - sourceline: 'ppa:h-rayflood/llvm'
            packages:
                - clang-3.4
        - os: linux
          compiler: clang
          env: LINK=static
          apt:
            sources:
                - sourceline: 'ppa:h-rayflood/llvm'
            packages:
                - clang-3.4
        - os: linux
          compiler: gcc
          env: LINK=dynamic
          apt:
            packages:
                - bash-completion
        - os: linux
          compiler: gcc
          env: LINK=static
          apt:
            packages:
                - lcov
                - bash-completion
    fast_finish:
        - true

before_install:

    # Set aliases for readability.
    - if [[ $CC             == gcc     ]]; then GCC=true; fi
    - if [[ $CC             == clang   ]]; then CLANG=true; fi
    - if [[ $LINK           == static  ]]; then STATIC=true; fi
    - if [[ $LINK           == dynamic ]]; then DYNAMIC=true; fi
    - if [[ $TRAVIS_OS_NAME == osx     ]]; then OSX=true; fi
    - if [[ $TRAVIS_OS_NAME == linux   ]]; then LINUX=true; fi


install:
  ############################################################################
  # All the dependencies are installed in ${TRAVIS_BUILD_DIR}/deps/
  ############################################################################
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}


    # Export CC/CXX to control gcc version.
    - if [[ $GCC                         ]]; then export CC=gcc-4.8; export CXX=g++-4.8; fi

    # Download and install packages.
    - if [[ $OSX   && $CLANG && $DYNAMIC ]]; then brew unlink boost; brew install boost; fi
    - if [[ $OSX   && $CLANG && $DYNAMIC ]]; then brew unlink bash-completion; brew install bash-completion; fi

script:

before_script:
  ############################################################################
  # Set the git identity (for pushing the documentation and the benchmarks)
  ############################################################################
  - git config --global user.name "Travis bot"
  - git config --global user.email travis-bot@travis-ci.org

  - if [ -n "$GCC_VERSION" ]; then export CXX_FLAGS="${CXX_FLAGS} -Wall -Wextra"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX_FLAGS="${CXX_FLAGS} -Wall -Wextra"; fi

  - cd ${TRAVIS_BUILD_DIR}
  - mkdir build 
  - cd build 
  - cmake .. -DWITH_TESTS=OFF -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS="${CXX_FLAGS}" ${BOOST_OPTS}

script:

  - make -j2 
  - sudo make install

notifications:
  email: false
  webhooks:
    urls: https://webhooks.gitter.im/e/a19dd2b03bf676d2b622
    on_success: change
    on_failure: always
